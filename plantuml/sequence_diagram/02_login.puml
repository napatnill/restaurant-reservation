@startuml Login User (POST)

header Restaurant Reservation Sequence Diagram
footer Page %page% of %lastpage%
title "Login User (POST)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:auth" as routerAuth
participant "<<controllers>>\n:auth" as controllersAuth
participant "<<model>>\n:User" as modelUser
database "<<MongoDB>>\n:users" as UsersDatabase

client -> server ++: req.post('/api/v1/auth/login')
server -> routerAuth ++: app.use('/api/v1/auth', auth)
routerAuth -> controllersAuth ++: login(req.body)

controllersAuth -> controllersAuth ++: validate email & password
controllersAuth -> modelUser ++: findOne({ email }).select("+password")
modelUser -> UsersDatabase ++: UserSchema
UsersDatabase --> modelUser --: user
modelUser --> controllersAuth --: user

controllersAuth -> controllersAuth ++: matchPassword(password)

alt If credentials are invalid
    controllersAuth -> client --: response (400/401 error)
else If credentials are valid
    controllersAuth -> controllersAuth ++: sendTokenResponse(user, 200, res)
    controllersAuth -> client --: response (token)
end

@enduml
